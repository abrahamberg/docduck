
╔════════════════════════════════════════════════════════════════╗
║          DOCDUCK FILE LIFECYCLE MANAGEMENT SYSTEM              ║
╚════════════════════════════════════════════════════════════════╝

┌────────────────────────────────────────────────────────────────┐
│  WHAT HAPPENS WHEN YOU RE-RUN THE INDEXER?                    │
└────────────────────────────────────────────────────────────────┘

FILE STATES HANDLED:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ NEW FILE (in provider, not in database)
   → Download → Extract → Chunk → Embed → INSERT to database
   → Result: File indexed and searchable

✅ UPDATED FILE (in both, but ETag changed)
   → Download → Extract → Chunk → Embed → UPSERT to database
   → Result: Old chunks replaced with new ones

✅ UNCHANGED FILE (in both, same ETag)
   → SKIP processing (logged)
   → Result: Fast run, no wasted API calls

✅ DELETED FILE (in database, not in provider)
   → DELETE chunks from docs_chunks
   → DELETE tracking from docs_files
   → Result: Orphaned vectors removed (if cleanup enabled)

✅ RENAMED FILE
   OneDrive/S3: Same doc_id → treated as UPDATE
   Local: Different doc_id → treated as DELETE + ADD


CONFIGURATION OPTIONS:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

appsettings.yaml:
┌────────────────────────────────────────────────────────────────┐
│ Chunking:                                                      │
│   CleanupOrphanedDocuments: true   # Auto-remove deleted files│
│   ForceFullReindex: false          # Incremental by default   │
└────────────────────────────────────────────────────────────────┘

OPTION 1 - Normal Operation (Recommended):
   CleanupOrphanedDocuments: true
   ForceFullReindex: false
   → Incremental sync, database stays current

OPTION 2 - Historical Archive:
   CleanupOrphanedDocuments: false
   ForceFullReindex: false
   → Never delete old data, grows over time

OPTION 3 - Force Complete Refresh:
   CleanupOrphanedDocuments: true
   ForceFullReindex: true  ⚠️ Temporary!
   → Delete everything, re-index from scratch


NEW REPOSITORY METHODS:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

VectorRepository now includes:

✓ CleanupOrphanedDocumentsAsync()
  → Removes deleted files automatically

✓ DeleteAllProviderDocumentsAsync()
  → Force complete reset for a provider

✓ IsDocumentIndexedAsync()
  → ETag-based change detection

✓ UpdateFileTrackingAsync()
  → Track file state after indexing


EXAMPLE RUN OUTPUT:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Day 1 - Initial Index:
INFO: Processing 10 documents from local/LocalFiles
INFO: Processing file: report.docx from LocalFiles
INFO: Processing file: memo.docx from LocalFiles
INFO: Indexing complete. Processed: 10, Skipped: 0, Chunks: 120

Day 2 - Incremental (1 updated, 2 deleted, 7 unchanged):
INFO: Processing 8 documents from local/LocalFiles
INFO: Found 2 orphaned document(s). Cleaning up...
INFO: Deleted orphaned: old-report.docx
INFO: Deleted orphaned: archived.docx
INFO: Cleanup complete: 2 documents removed, 24 chunks deleted
INFO: Skipping unchanged: memo.docx (ETag: sha256:abc...)
INFO: Processing file: report.docx from LocalFiles
INFO: Indexing complete. Processed: 1, Skipped: 7, Chunks: 12


DOCUMENTATION:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📖 Full Guide:      docs/guides/file-lifecycle.md
📖 Quick Reference: docs/guides/file-lifecycle-quickref.md
📖 Summary:         docs/guides/SUMMARY-FILE-LIFECYCLE.md
📖 Execution Modes: docs/guides/execution-modes.md


KEY TAKEAWAYS:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ System automatically handles ALL file lifecycle events
✅ Database stays in sync with document sources
✅ No manual cleanup needed
✅ Efficient: skips unchanged files via ETag tracking
✅ Configurable: choose cleanup behavior for your use case
✅ Logging: clear visibility into what changed
✅ Production-ready: no breaking changes, safe defaults
