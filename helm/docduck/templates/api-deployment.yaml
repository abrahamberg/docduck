{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docduck.fullname" . }}-api
  labels:
    {{- include "docduck.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  revisionHistoryLimit: {{ .Values.api.revisionHistoryLimit }}
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "docduck.name" . }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "docduck.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ if .Values.api.serviceAccount.create }}{{ default (printf "%s-api" (include "docduck.fullname" .)) .Values.api.serviceAccount.name }}{{ else }}{{ .Values.api.serviceAccount.name }}{{ end }}
      securityContext: {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          image: {{- $comp := dict "image" .Values.api.image "component" "api" -}}{{ include "docduck.componentImage" (dict "Values" .Values "component" .Values.api "Chart" .Chart "Release" .Release ) }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          env:
            {{- include "docduck.commonEnv" . | nindent 12 }}
            {{- range $k, $v := .Values.api.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- with .Values.api.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- range .Values.api.secretEnvs }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .key }}
            {{- end }}
          {{- with .Values.api.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
            {{- range .Values.api.envFromSecrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.api.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.api.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.api.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.api.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
