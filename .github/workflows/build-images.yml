name: Build & Push Images
# Assumptions: GHCR used for publishing; api/Indexer/web have valid Dockerfiles (web optimized). BuildKit cache via gha to speed up repeated builds.

on:
  push:
    branches: [ main ]
    paths:
      - 'Api/**'
      - 'Indexer/**'
      - 'web/**'
      - 'sql/**'
      - '.github/workflows/build-images.yml'
  pull_request:
    paths:
      - 'Api/**'
      - 'Indexer/**'
      - 'web/**'
      - 'sql/**'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, indexer, web]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/docduck-${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch optional)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service == 'web' && 'web/Dockerfile' || matrix.service == 'api' && 'Api/Dockerfile' || 'Indexer/Dockerfile' }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VITE_API_BASE=/api
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  summary:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Image build summary
        run: |
          echo "Built images for services: api, indexer, web"
