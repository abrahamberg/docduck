version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: docduck-postgres
    environment:
      POSTGRES_DB: docduck
      POSTGRES_USER: docduck
      POSTGRES_PASSWORD: docduck123
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docduck"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docduck

  # Multi-provider indexer
  indexer:
    build:
      context: ./Indexer
      dockerfile: Dockerfile
    container_name: docduck-indexer
    environment:
      # Sensitive values - override with .env file
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # OneDrive credentials (if using)
      GRAPH_TENANT_ID: ${GRAPH_TENANT_ID:-}
      GRAPH_CLIENT_ID: ${GRAPH_CLIENT_ID:-}
      GRAPH_CLIENT_SECRET: ${GRAPH_CLIENT_SECRET:-}
      GRAPH_SITE_ID: ${GRAPH_SITE_ID:-}
      GRAPH_DRIVE_ID: ${GRAPH_DRIVE_ID:-}
      # S3 credentials (if using)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-}
      # Database connection
      DB_CONNECTION_STRING: "Host=postgres;Database=docduck;Username=docduck;Password=docduck123"
    volumes:
      # Mount YAML config
      - ./Indexer/appsettings.yaml:/app/appsettings.yaml:ro
      # Mount local documents directory (for local provider)
      - ${LOCAL_DOCS_PATH:-./docs-sample}:/data/documents:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docduck
    # Run once and exit (use CronJob in K8s for scheduled runs)
    restart: "no"

  # Query API
  api:
    build:
      context: ./Api
      dockerfile: Dockerfile
    container_name: docduck-api
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_CONNECTION_STRING: "Host=postgres;Database=docduck;Username=docduck;Password=docduck123"
      ASPNETCORE_URLS: "http://+:8080"
      ADMIN_AUTH_SECRET: ${ADMIN_AUTH_SECRET:-change-me-production-secret}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docduck
    restart: unless-stopped

  # Static web UI (React) served via nginx
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: http://api:8080
    container_name: docduck-web
    ports:
      - "5173:80"  # expose on host port 5173 (adjust as needed)
    depends_on:
      - api
    networks:
      - docduck
    restart: unless-stopped

networks:
  docduck:
    driver: bridge

volumes:
  pgdata:
