---
apiVersion: v1
kind: ConfigMap
metadata:
  name: indexer-config
  namespace: docduck
data:
  appsettings.yaml: |
    # Multi-Provider Indexer Configuration
    OpenAi:
      ApiKey: "${OPENAI_API_KEY}"
      BaseUrl: "https://api.openai.com/v1"
      EmbedModel: "text-embedding-3-small"
      BatchSize: 100

    Database:
      ConnectionString: "${DB_CONNECTION_STRING}"

    Chunking:
      ChunkSize: 500
      ChunkOverlap: 50
      MaxFiles: null

    Providers:
      # OneDrive Provider - configured via secrets
      OneDrive:
        Enabled: false  # Set to true if using OneDrive
        Name: "CompanyOneDrive"
        AuthMode: "ClientSecret"
        AccountType: "business"
        TenantId: "${GRAPH_TENANT_ID}"
        ClientId: "${GRAPH_CLIENT_ID}"
        ClientSecret: "${GRAPH_CLIENT_SECRET}"
        SiteId: "${GRAPH_SITE_ID}"
        DriveId: "${GRAPH_DRIVE_ID}"
        FolderPath: "/Shared Documents/Docs"
        FileExtensions: [".docx"]

      # Local Filesystem Provider
      Local:
        Enabled: true
        Name: "LocalFiles"
        RootPath: "/data/documents"
        Recursive: true
        FileExtensions: [".docx", ".pdf", ".txt"]
        ExcludePatterns: [".git", "node_modules", "__pycache__"]

      # AWS S3 Provider - uses IAM role by default in K8s
      S3:
        Enabled: true
        Name: "S3Documents"
        BucketName: "${S3_BUCKET_NAME}"
        Prefix: "documents/"
        Region: "us-east-1"
        UseInstanceProfile: true  # Use IAM role for service account
        FileExtensions: [".docx", ".pdf", ".txt"]

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: docduck-indexer
  namespace: docduck
spec:
  # Run every 6 hours
  schedule: "0 */6 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        metadata:
          labels:
            app: docduck-indexer
        spec:
          serviceAccountName: docduck-indexer  # For S3 IAM role access
          restartPolicy: OnFailure
          containers:
          - name: indexer
            image: your-registry/docduck-indexer:latest
            imagePullPolicy: IfNotPresent
            env:
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: db-connection-string
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: openai-api-key
            # OneDrive credentials (optional)
            - name: GRAPH_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: graph-tenant-id
                  optional: true
            - name: GRAPH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: graph-client-id
                  optional: true
            - name: GRAPH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: graph-client-secret
                  optional: true
            - name: GRAPH_SITE_ID
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: graph-site-id
                  optional: true
            - name: GRAPH_DRIVE_ID
              valueFrom:
                secretKeyRef:
                  name: docduck-secrets
                  key: graph-drive-id
                  optional: true
            # S3 configuration
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: docduck-config
                  key: s3-bucket-name
            volumeMounts:
            - name: config
              mountPath: /app/appsettings.yaml
              subPath: appsettings.yaml
              readOnly: true
            # Optional: mount PVC for local files provider
            - name: documents
              mountPath: /data/documents
              readOnly: true
            resources:
              requests:
                memory: "512Mi"
                cpu: "500m"
              limits:
                memory: "2Gi"
                cpu: "2000m"
          volumes:
          - name: config
            configMap:
              name: indexer-config
          # Optional: PVC for local documents
          - name: documents
            persistentVolumeClaim:
              claimName: docduck-documents-pvc

---
# Service Account with IAM role for S3 access (AWS EKS)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: docduck-indexer
  namespace: docduck
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/docduck-indexer-role

---
# Example Secret (create with actual values)
apiVersion: v1
kind: Secret
metadata:
  name: docduck-secrets
  namespace: docduck
type: Opaque
stringData:
  db-connection-string: "Host=postgres-service;Database=docduck;Username=docduck;Password=CHANGE_ME"
  openai-api-key: "sk-..."
  # Optional OneDrive credentials
  graph-tenant-id: ""
  graph-client-id: ""
  graph-client-secret: ""
  graph-site-id: ""
  graph-drive-id: ""

---
# ConfigMap for non-sensitive config
apiVersion: v1
kind: ConfigMap
metadata:
  name: docduck-config
  namespace: docduck
data:
  s3-bucket-name: "my-company-documents"

---
# Optional: PVC for local documents (if using NFS or similar)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docduck-documents-pvc
  namespace: docduck
spec:
  accessModes:
    - ReadOnlyMany
  storageClassName: nfs-storage  # or your storage class
  resources:
    requests:
      storage: 50Gi
